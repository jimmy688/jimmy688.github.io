(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{1990:function(a,t,s){"use strict";s.r(t);var e=s(17),n=Object(e.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h2",{attrs:{id:"impala课前准备"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#impala课前准备"}},[a._v("#")]),a._v(" impala课前准备")]),a._v(" "),e("p",[a._v("安装好hive以及hadoop运行环境，并正常启动hadoop以及hive的")]),a._v(" "),e("h2",{attrs:{id:"离线任务处理流程概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#离线任务处理流程概述"}},[a._v("#")]),a._v(" 离线任务处理流程概述")]),a._v(" "),e("p",[a._v("离线任务的大致流程：数据采集--\x3eHDFS存储--\x3eETL清洗数据--\x3e构建数据仓库--\x3eweb界面数据展示。离线处理大致示意图如下：")]),a._v(" "),e("p",[e("img",{attrs:{src:s(551),alt:"离线任务处理流程"}})]),a._v(" "),e("p",[a._v("前面我们学习了一些离线处理的框架：")]),a._v(" "),e("ul",[e("li",[a._v("flume--\x3e日志数据的采集")]),a._v(" "),e("li",[a._v("sqoop--\x3e数据导入导出工具")]),a._v(" "),e("li",[a._v("mapreduce--\x3e数据清洗工作")]),a._v(" "),e("li",[a._v("hive--\x3e数据仓库的构建")]),a._v(" "),e("li",[a._v("azkaban--\x3e实现定时任务")]),a._v(" "),e("li",[a._v("echarts/highcharts--\x3e数据报表展示（还没学）")])]),a._v(" "),e("p",[a._v("hive是一个数据仓库工具，底层的执行引擎是mapreduce，查询速度比较慢，是较早的一个sql on hadoop的工具。")]),a._v(" "),e("p",[a._v("现在，我们要学习另一个sql on hadoop的工具，叫做impala，impala可以完全替代hive，而且速度很快。")]),a._v(" "),e("h2",{attrs:{id:"imala基本介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#imala基本介绍"}},[a._v("#")]),a._v(" imala基本介绍")]),a._v(" "),e("p",[a._v("impala是cloudera提供的一款高效率的sql查询工具，提供实时的查询效果，官方测试性能比hive快10到100倍，其sql查询比sparkSQL还要更加快速，号称是当前大数据领域最快的查询sql工具，impala是参照谷歌的新三篇论文（Caffeine、Pregel、Dremel）当中的Dremel实现而来，其中旧三篇论文分别是（BigTable，GFS，MapReduce）分别对应HBase、HDFS以及MapReduce")]),a._v(" "),e("p",[a._v("impala是基于hive并使用"),e("strong",[a._v("内存")]),a._v("进行计算，兼顾数据仓库，具有实时，批处理，多并发等优点")]),a._v(" "),e("h2",{attrs:{id:"impala与hive的关系"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#impala与hive的关系"}},[a._v("#")]),a._v(" impala与hive的关系")]),a._v(" "),e("p",[a._v("impala是基于hive的大数据分析查询引擎，直接使用hive的元数据库metadata，意味着impala元数据都存储在hive的metastore当中，并且impala兼容hive的绝大多数sql语法。所以需要安装impala的话，必须先安装hive，保证hive安装成功，并且还需要启动hive的metastore服务。")]),a._v(" "),e("p",[a._v("Hive的元数据信息存储在mysql表上，impala要访问hive的元数据库metadata，不是直接访问mysql表的，而是先通过hive，再访问mysql表的。（前提是开启了Hive的对外元数据访问服务——metastore）")]),a._v(" "),e("img",{staticStyle:{zoom:"80%"},attrs:{src:"impala.assets/image-20200330145129427.png",alt:"image-20200330145129427"}}),a._v(" "),e("h2",{attrs:{id:"impala的优点-缺点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#impala的优点-缺点"}},[a._v("#")]),a._v(" impala的优点/缺点")]),a._v(" "),e("p",[a._v("优点：")]),a._v(" "),e("ol",[e("li",[e("p",[a._v("impala比较快，非常快，特别快，因为所有的计算都可以放入内存当中进行完成，只要你内存足够大")])]),a._v(" "),e("li",[e("p",[a._v("摈弃了MR的计算，改用C++来实现，有针对性的硬件优化")])]),a._v(" "),e("li",[e("p",[a._v("具有数据仓库的特性，对hive的原有数据做数据分析")])]),a._v(" "),e("li",[e("p",[a._v("支持ODBC，jdbc远程访问")])])]),a._v(" "),e("p",[a._v("缺点：")]),a._v(" "),e("ol",[e("li",[e("p",[a._v("基于内存计算，对内存依赖性较大")])]),a._v(" "),e("li",[e("p",[a._v("改用C++编写，意味着维护难度增大")])]),a._v(" "),e("li",[e("p",[a._v("基于hive，与hive共存亡，紧耦合")])]),a._v(" "),e("li",[e("p",[a._v("稳定性不如hive，不存在数据丢失的情况")])])]),a._v(" "),e("h2",{attrs:{id:"impala的架构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#impala的架构"}},[a._v("#")]),a._v(" impala的架构")]),a._v(" "),e("p",[a._v("impala是一个主从架构，架构模块如下：")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("impala-statestore：主节点，状态存储区，sql语句执行的状态都在这里看")])]),a._v(" "),e("li",[e("p",[a._v("impalas-catalog：主节点，元数据管理区")])]),a._v(" "),e("li",[e("p",[a._v("impala-server(impalad)：从节点，启动的守护进程，执行我们的sql查询计划，官方建议impalad与所有的datanode装在一起，可以通过hadoop的短路读取特性实现数据的快速查询")])])]),a._v(" "),e("p",[e("img",{attrs:{src:s(552),alt:"img"}})]),a._v(" "),e("h2",{attrs:{id:"impala的执行计划"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#impala的执行计划"}},[a._v("#")]),a._v(" impala的执行计划")]),a._v(" "),e("p",[e("strong",[a._v("查询执行")])]),a._v(" "),e("p",[a._v("impalad分为frontend和backend两个层次， frondend用java实现（通过JNI嵌入impalad），负责查询计划生成， 而backend用C++实现， 负责查询执行。")]),a._v(" "),e("p",[a._v("frontend生成查询计划分为两个阶段：")]),a._v(" "),e("p",[a._v("（1）生成单机查询计划，单机执行计划与关系数据库执行计划相同，所用查询优化方法也类似。")]),a._v(" "),e("p",[a._v("（2）生成分布式查询计划。 根据单机执行计划， 生成真正可执行的分布式执行计划，降低数据移动， 尽量把数据和计算放在一起。")]),a._v(" "),e("p",[e("img",{attrs:{src:s(553),alt:"http://www.aboutyun.com/data/attachment/forum/201507/27/134940kb7luw6ix8in3w3s.png"}})]),a._v(" "),e("p",[a._v("上图是SQL查询例子， 该SQL的目标是在三表join的基础上算聚集， 并按照聚集列排序取topN。")]),a._v(" "),e("p",[a._v("impala的查询优化器支持代价模型： 利用表和分区的cardinality，每列的distinct值个数等统计数据， impala可估算执行计划代价， 并生成较优的执行计划。 上图左边是frontend查询优化器生成的单机查询计划， 与传统关系数据库不同， 单机查询计划不能直接执行， 必须转换成如图右半部分所示的分布式查询计划。 该分布式查询计划共分成6个segment（图中彩色无边框圆角矩形）， 每个segment是可以被单台服务器独立执行的计划子树。")]),a._v(" "),e("h2",{attrs:{id:"impala-spark-hive对比"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#impala-spark-hive对比"}},[a._v("#")]),a._v(" impala/SPARK/hive对比")]),a._v(" "),e("table",[e("thead",[e("tr",[e("th"),a._v(" "),e("th",[a._v("HIVE")]),a._v(" "),e("th",[a._v("SPARK")]),a._v(" "),e("th",[a._v("Impala")])])]),a._v(" "),e("tbody",[e("tr",[e("td",[a._v("概要")]),a._v(" "),e("td",[a._v("Hive是老牌的SQL-on-hadoop解决方案")]),a._v(" "),e("td",[a._v("spark上的交互式SQL解决方案提供DataFrame API做为SQL补充，方便实现ETL、分析、机器学习等复杂逻辑。")]),a._v(" "),e("td",[a._v("hadoop上交互式的MPP SQL引擎")])]),a._v(" "),e("tr",[e("td",[a._v("容错")]),a._v(" "),e("td",[a._v("强，中间结果落盘，容错能力强，最细粒度容错")]),a._v(" "),e("td",[a._v("较强，基于数据血缘关系的数据恢复")]),a._v(" "),e("td",[a._v("弱，遇到问题时，需要重做查询")])]),a._v(" "),e("tr",[e("td",[a._v("性能")]),a._v(" "),e("td",[a._v("慢，MR启动慢，中间结果落盘")]),a._v(" "),e("td",[a._v("较快，基于RDD模型，DAG执行基于代价的查询优化内存基于列存储编译执行（生成Java字节码）Java实现")]),a._v(" "),e("td",[a._v("快，MPP架构基于代价的查询优化，JOIN优化LLVM查询，编译C++实现向量执行引擎，可使用SSE指令列存IO本地化资源管理器优化（LLAM）")])])])]),a._v(" "),e("p",[a._v("注释：落盘——写到磁盘中？")]),a._v(" "),e("h2",{attrs:{id:"impala的安装-todo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#impala的安装-todo"}},[a._v("#")]),a._v(" impala的安装（TODO）")]),a._v(" "),e("h4",{attrs:{id:"安装方式的选择"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装方式的选择"}},[a._v("#")]),a._v(" 安装方式的选择")]),a._v(" "),e("p",[a._v("由于大部分的软件框架，CDH都提供了压缩包的安装方式，但是由于impala有部分代码使用C++编写，所以impala在安装包的选择上面，cloudera公司没有提供tar包的安装方式，只提供了rpm的安装方式，我们可以通过下载rpm包来进行安装。注意：rpm包是linux操作系统上面的一种安装压缩包")]),a._v(" "),e("p",[a._v("由于impala没有提供tar包供我们进行安装，只提供了rpm包，所以我们在安装impala的时候，需要使用rpm包来进行安装，rpm包只有cloudera公司提供了，所以我们去cloudera公司网站进行下载rpm包即可，但是另外一个问题，impala的rpm包依赖非常多的其他的rpm包，可以一个个的将依赖找出来，也可以将所有的rpm包下载下来，制作成我们本地yum源来进行安装。我们选择这个方式安装impala。")]),a._v(" "),e("h4",{attrs:{id:"拓展-yum命令的实质"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#拓展-yum命令的实质"}},[a._v("#")]),a._v(" 拓展：yum命令的实质")]),a._v(" "),e("p",[a._v("当执行一个命令：yum install xxx时，首先会去配置文件里查找rmp仓库的地址，然后通过某种网络协议去对应的rmp仓下载rpm包。因此，要制作自己的本地yum源来安装东西，我们只需执行以下3步：")]),a._v(" "),e("ol",[e("li",[a._v("制作rpm本地仓库")]),a._v(" "),e("li",[a._v("写一个配置文件，指定rpm本地仓库的地址")]),a._v(" "),e("li",[a._v("安装httpd服务：yum -y install httpd")])]),a._v(" "),e("p",[e("img",{attrs:{src:s(554),alt:"image-20200331002442077"}})]),a._v(" "),e("h4",{attrs:{id:"制作自己的本地yum源"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#制作自己的本地yum源"}},[a._v("#")]),a._v(" 制作自己的本地yum源")]),a._v(" "),e("h6",{attrs:{id:"制作rpm本地仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#制作rpm本地仓库"}},[a._v("#")]),a._v(" 制作rpm本地仓库")]),a._v(" "),e("p",[a._v("下载所有的rpm包，下载地址：http://archive.cloudera.com/cdh5/repo-as-tarball/5.14.2/cdh5.14.2-centos7.tar.gz")]),a._v(" "),e("img",{staticStyle:{zoom:"67%"},attrs:{src:"impala.assets/image-20200330161714919.png",alt:"image-20200330161714919"}}),a._v(" "),e("p",[a._v("将我们下载好的压缩包cdh5.14.2-centos7.tar.gz，上传到node03服务器的/kkb/soft路径下，并进行解压：")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" /kkb/soft\nrz "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#文件大于4G，可能要使用security Fx上传")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("hadoop@node03 soft"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" -zxvf cdh5.14.2-centos7.tar.gz\n")])])]),e("h6",{attrs:{id:"安装并启动httpd服务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装并启动httpd服务"}},[a._v("#")]),a._v(" 安装并启动httpd服务")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("hadoop@node03 ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" yum  -y "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" httpd\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("hadoop@node03 ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" systemctl start httpd.service\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#验证是否启动httpd了:")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("hadoop@node03 soft"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v(" -ef"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" httpd\nroot      "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("49419")]),a._v("      "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("  "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" 00:37 ?        00:00:00 /usr/sbin/httpd -DFOREGROUND\napache    "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("49420")]),a._v("  "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("49419")]),a._v("  "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" 00:37 ?        00:00:00 /usr/sbin/httpd -DFOREGROUND\napache    "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("49421")]),a._v("  "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("49419")]),a._v("  "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" 00:37 ?        00:00:00 /usr/sbin/httpd -DFOREGROUND\napache    "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("49422")]),a._v("  "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("49419")]),a._v("  "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" 00:37 ?        00:00:00 /usr/sbin/httpd -DFOREGROUND\napache    "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("49423")]),a._v("  "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("49419")]),a._v("  "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" 00:37 ?        00:00:00 /usr/sbin/httpd -DFOREGROUND\napache    "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("49424")]),a._v("  "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("49419")]),a._v("  "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" 00:37 ?        00:00:00 /usr/sbin/httpd -DFOREGROUND\nhadoop    "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("49427")]),a._v("  "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("49040")]),a._v("  "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" 00:37 pts/0    00:00:00 "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" --color"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("auto httpd\n")])])]),e("h6",{attrs:{id:"创建yum配置文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建yum配置文件"}},[a._v("#")]),a._v(" 创建yum配置文件")]),a._v(" "),e("p",[a._v("镜像源是centos当中下载相关软件的地址，选用第三台机器作为镜像源的服务端，node03机器上执行以下命令：")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" /etc/yum.repos.d\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("vim")]),a._v(" localimp.repo \n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("localimp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("name")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("localimp\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("baseurl")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("http://node03/cdh5.14.2/\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("gpgcheck")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("enabled")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n")])])]),e("h6",{attrs:{id:"创建apache-httpd的读取链接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建apache-httpd的读取链接"}},[a._v("#")]),a._v(" 创建apache httpd的读取链接")]),a._v(" "),e("p",[a._v("启动httpd服务后，在/var/www/html/上的文件都可以通过http访问到，因此我们要在/var/www/html/路径下，创建本地rpm仓库的软链接。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("sudo ln -s /kkb/soft/cdh/5.14.2 /var/www/html/cdh5.14.2\n")])])]),e("h6",{attrs:{id:"web页面访问本地yum源"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#web页面访问本地yum源"}},[a._v("#")]),a._v(" web页面访问本地yum源")]),a._v(" "),e("p",[a._v("访问地址：http://node03/cdh5.14.2，出现下面这个界面表示本地yum源制作成功")]),a._v(" "),e("img",{staticStyle:{zoom:"67%"},attrs:{src:"impala.assets/image-20200331005620914.png",alt:"image-20200331005620914"}}),a._v(" "),e("h6",{attrs:{id:"分发配置文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分发配置文件"}},[a._v("#")]),a._v(" 分发配置文件")]),a._v(" "),e("p",[a._v("将node03制作好的localimp配置文件发放到所有需要安装impala的节点上去")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" /etc/yum.repos.d/\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("hadoop@node03 yum.repos.d"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("scp")]),a._v(" localimp.repo  node02:/etc/yum.repos.d/\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("hadoop@node03 yum.repos.d"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("scp")]),a._v(" localimp.repo  node01:/etc/yum.repos.d/\n")])])]),e("h4",{attrs:{id:"开始安装impala"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#开始安装impala"}},[a._v("#")]),a._v(" 开始安装impala")]),a._v(" "),e("p",[a._v("安装规划如下，以node03作为主节点，node02/node01作为从节点。")]),a._v(" "),e("table",[e("thead",[e("tr",[e("th",[a._v("服务名称")]),a._v(" "),e("th",[a._v("node01")]),a._v(" "),e("th",[a._v("node02")]),a._v(" "),e("th",[a._v("node03")])])]),a._v(" "),e("tbody",[e("tr",[e("td",[a._v("impala-catalog")]),a._v(" "),e("td",[a._v("×")]),a._v(" "),e("td",[a._v("×")]),a._v(" "),e("td",[a._v("安装")])]),a._v(" "),e("tr",[e("td",[a._v("impala-state-store")]),a._v(" "),e("td",[a._v("×")]),a._v(" "),e("td",[a._v("×")]),a._v(" "),e("td",[a._v("安装")])]),a._v(" "),e("tr",[e("td",[a._v("impala-server")]),a._v(" "),e("td",[a._v("安装")]),a._v(" "),e("td",[a._v("安装")]),a._v(" "),e("td",[a._v("安装")])])])]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#主节点node03执行以下命令进行安装")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" yum  "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v("  impala -y\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" yum "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" impala-server -y\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" yum "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" impala-state-store  -y\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" yum "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" impala-catalog  -y\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" yum  "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v("  impala-shell -y\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#从节点node01与node02安装以下服务")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" yum "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" impala-server -y\n")])])]),e("p",[a._v("补充：")]),a._v(" "),e("p",[a._v("在这一步时，遇到过一个错误：http://node03/cdh5.14.2/repodata/repomd.xml: [Errno 14] HTTP Error 404 - Not Found，是因为我们制作本地rpm仓库的时候，解压出来的文件没有包含repodata文件夹，也不知道怎么没有的，但是重新rz将缺失的repodata文件夹上传就可以解决了。")]),a._v(" "),e("img",{staticStyle:{zoom:"67%"},attrs:{src:"impala.assets/image-20200331015723512.png",alt:"image-20200331015723512"}}),a._v(" "),e("h4",{attrs:{id:"node03修改hive-site-xml"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#node03修改hive-site-xml"}},[a._v("#")]),a._v(" node03修改hive-site.xml")]),a._v(" "),e("p",[a._v("node03机器修改hive-site.xml内容如下")]),a._v(" "),e("p",[a._v("hive-site.xml配置")]),a._v(" "),e("div",{staticClass:"language-xml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-xml"}},[e("code",[a._v("vim /kkb/install/hive-1.1.0-cdh5.14.2/conf/hive-site.xml\n添加以下三个配置属性\n\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("property")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n\t"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("hive.server2.thrift.bind.host"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n \t"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("value")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("node03"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("value")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("property")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("property")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n     "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("hive.metastore.uris"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n     "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("value")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("thrift://node03:9083"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("value")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("property")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("property")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("hive.metastore.client.socket.timeout"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("value")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("3600"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("value")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("property")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),e("p",[a._v("注意：hive.server2.thrift.bind.host可能本来就存在，可以不用添加。")]),a._v(" "),e("h4",{attrs:{id:"拷贝hive安装包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#拷贝hive安装包"}},[a._v("#")]),a._v(" 拷贝hive安装包")]),a._v(" "),e("p",[a._v("之前只是在node03安装了hive，需要将hive的安装包，拷贝到所有的服务器上面都保存一份，因为impala需要引用hive的安装目录下面的一些依赖的jar包。")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" /kkb/install/\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("hadoop@node03 install"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("scp")]),a._v(" -r hive-1.1.0-cdh5.14.2/ node02:/kkb/install/\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("hadoop@node03 install"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("scp")]),a._v(" -r hive-1.1.0-cdh5.14.2/ node01:/kkb/install/\n")])])]),e("h4",{attrs:{id:"node01-02-03修改hdfs-site-xml-疑点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#node01-02-03修改hdfs-site-xml-疑点"}},[a._v("#")]),a._v(" node01/02/03修改hdfs-site.xml（疑点）")]),a._v(" "),e("p",[a._v("所有的节点创建目录：")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" -p /var/run/hdfs-sockets\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("chown")]),a._v(" -R  hadoop:hadoop   /var/run/hdfs-sockets/\n")])])]),e("p",[a._v("修改所有节点的hdfs-site.xml添加以下配置，修改完之后重启hdfs集群生效")]),a._v(" "),e("div",{staticClass:"language-xml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-xml"}},[e("code",[a._v("vim  /kkb/install/hadoop-2.6.0-cdh5.14.2/etc/hadoop/hdfs-site.xml\n\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("property")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("dfs.client.read.shortcircuit"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("value")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("true"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("value")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("property")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("property")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n     "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("dfs.domain.socket.path"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n     "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("value")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("/var/run/hdfs-sockets/dn"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("value")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("property")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("property")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("dfs.client.file-block-storage-locations.timeout.millis"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("value")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("10000"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("value")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("property")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("property")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n     "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("dfs.datanode.hdfs-blocks-metadata.enabled"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n     "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("value")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("true"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("value")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("property")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),e("h4",{attrs:{id:"重启hdfs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重启hdfs"}},[a._v("#")]),a._v(" 重启hdfs")]),a._v(" "),e("p",[a._v("重启hdfs文件系统，node01服务器上面执行以下命令：")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" /kkb/install/hadoop-2.6.0-cdh5.14.2/\n\nsbin/stop-dfs.sh\nsbin/start-dfs.sh\n")])])]),e("h4",{attrs:{id:"创建hadoop与hive的配置文件的连接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建hadoop与hive的配置文件的连接"}},[a._v("#")]),a._v(" 创建hadoop与hive的配置文件的连接")]),a._v(" "),e("p",[a._v("所有节点，在impala的配置目录/etc/impala/conf创建core-site.xml，hdfs-site.xml以及hive-site.xml配置文件的软链接：")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("ln")]),a._v(" -s /kkb/install/hadoop-2.6.0-cdh5.14.2/etc/hadoop/core-site.xml /etc/impala/conf/core-site.xml\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("ln")]),a._v(" -s /kkb/install/hadoop-2.6.0-cdh5.14.2/etc/hadoop/hdfs-site.xml /etc/impala/conf/hdfs-site.xml\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("ln")]),a._v(" -s /kkb/install/hive-1.1.0-cdh5.14.2/conf/hive-site.xml /etc/impala/conf/hive-site.xml \n")])])]),e("h4",{attrs:{id:"修改impala的配置文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改impala的配置文件"}},[a._v("#")]),a._v(" 修改impala的配置文件")]),a._v(" "),e("p",[a._v("所有节点：更改impala默认配置文件以及添加mysql的连接驱动包")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("vim")]),a._v(" /etc/default/impala\n\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("IMPALA_CATALOG_SERVICE_HOST")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("node03\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("IMPALA_STATE_STORE_HOST")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("node03\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## 所有节点创建mysql的驱动包的软连接")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" -p /usr/share/java\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("ln")]),a._v(" -s /kkb/install/hive-1.1.0-cdh5.14.2/lib/mysql-connector-java-5.1.38.jar /usr/share/java/mysql-connector-java.jar\n")])])]),e("h4",{attrs:{id:"修改bigtop的java路径"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改bigtop的java路径"}},[a._v("#")]),a._v(" 修改bigtop的java路径")]),a._v(" "),e("p",[a._v("所有节点：修改bigtop的java_home路径")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("vim")]),a._v(" /etc/default/bigtop-utils\n\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("JAVA_HOME")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/kkb/install/jdk1.8.0_141\n")])])]),e("h2",{attrs:{id:"启动impala服务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动impala服务"}},[a._v("#")]),a._v(" 启动impala服务")]),a._v(" "),e("p",[a._v("启动node03的hive的metastore服务：")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v("  /kkb/install/hive-1.1.0-cdh5.14.2\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("hadoop@node03 ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("nohup")]),a._v(" hive --service metastore "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("hadoop@node03 ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("nohup")]),a._v(" hive --service hiveserver2 "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&")]),a._v("\n")])])]),e("p",[a._v("注意：一定要保证mysql的服务正常启动，否则metastore的服务不能够启动,查看mysql是否开启的方式如下：")]),a._v(" "),e("div",{staticClass:"language-ruby extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ruby"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("bin"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("systemctl status mysqld"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("service\n")])])]),e("p",[a._v("主节点node03启动以下三个服务进程")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("service")]),a._v(" impala-state-store start\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("service")]),a._v(" impala-catalog start\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("service")]),a._v(" impala-server start\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#关闭方式如下：")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("service")]),a._v(" impala-state-store stop\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("service")]),a._v(" impala-catalog stop\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("service")]),a._v(" impala-server stop\n")])])]),e("p",[a._v("从节点启动node01与node02启动impala-server")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("service")]),a._v("  impala-server  start\n")])])]),e("p",[a._v("三台机器可以通过以下命令，查看impala进程是否存在")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v(" -ef "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" impala\n")])])]),e("p",[a._v("注意：启动之后所有关于impala的日志默认都在/var/log/impala 这个路径下，node03机器上面应该有三个进程，node02与node01机器上面只有一个进程，如果进程个数不对，去对应目录下查看报错日志")]),a._v(" "),e("h2",{attrs:{id:"浏览器页面访问"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器页面访问"}},[a._v("#")]),a._v(" 浏览器页面访问")]),a._v(" "),e("p",[a._v("访问impalad的管理界面")]),a._v(" "),e("p",[a._v("http://node03:25000/")]),a._v(" "),e("p",[a._v("访问statestored的管理界面")]),a._v(" "),e("p",[a._v("http://node03:25010/")]),a._v(" "),e("p",[a._v("访问catalog的管理界面")]),a._v(" "),e("p",[a._v("http://node03:25020")]),a._v(" "),e("h2",{attrs:{id:"impala-shell的外部命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#impala-shell的外部命令"}},[a._v("#")]),a._v(" impala-shell的外部命令")]),a._v(" "),e("p",[a._v("impala-shell外部命令是指不需要进入到impala-shell中即可执行的命令。")]),a._v(" "),e("h4",{attrs:{id:"h-查看帮助文档"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#h-查看帮助文档"}},[a._v("#")]),a._v(" -h  查看帮助文档")]),a._v(" "),e("p",[a._v("impala-shell外部命令的常用option是:")]),a._v(" "),e("ul",[e("li",[a._v("-q:不进入impala-shell客户端，直接执行sql语句")]),a._v(" "),e("li",[a._v("-f:执行sql脚本文件")]),a._v(" "),e("li",[a._v("-r:刷新元数据")])]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("hadoop@node03 ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("$ impala-shell -h\nOptions:\n  -h, --help            show this "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("help")]),a._v(" message and "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exit")]),a._v("\n  -q QUERY, --query"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("QUERY\n                        Execute a query without the shell "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("default: none"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n  -f QUERY_FILE, --query_file"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("QUERY_FILE\n                        Execute the queries "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" the query file, delimited by "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n                        If the argument to -f is "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"-"')]),a._v(", "),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v(" queries are "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("read")]),a._v("\n                        from stdin and terminated with ctrl-d. "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("default: none"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n  -r, --refresh_after_connect\n                        Refresh Impala catalog after connecting\n                        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("default: False"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),e("h4",{attrs:{id:"r-刷新整个元数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#r-刷新整个元数据"}},[a._v("#")]),a._v(" -r  刷新整个元数据")]),a._v(" "),e("p",[a._v("数据量大的时候，比较消耗服务器性能")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("impala-shell -r\n")])])]),e("h4",{attrs:{id:"v-查看对应版本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#v-查看对应版本"}},[a._v("#")]),a._v(" -v  查看对应版本")]),a._v(" "),e("p",[a._v("查看impala-shell的版本")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("hadoop@node03 ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("$ impala-shell -v\nImpala Shell v2.11.0-cdh5.14.2 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("ed85dce"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" built on Tue Mar "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("27")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("13")]),a._v(":39:48 PDT "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("2018")]),a._v("\n")])])]),e("h4",{attrs:{id:"f-执行sql脚本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#f-执行sql脚本"}},[a._v("#")]),a._v(" -f  执行sql脚本")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" /kkb/install\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("vim")]),a._v(" impala-shell.sql\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("select")]),a._v(" * from course.score"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#通过-f 参数来执行执行的查询文件")]),a._v("\nimpala-shell -f impala-shell.sql\n")])])]),e("h4",{attrs:{id:"p-显示查询计划"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#p-显示查询计划"}},[a._v("#")]),a._v(" -p  显示查询计划")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[a._v("impala-shell -f impala-shell.sql -p\n")])])]),e("h4",{attrs:{id:"_9-1-2、impala-shell的内部命令行参数语法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-2、impala-shell的内部命令行参数语法"}},[a._v("#")]),a._v(" 9.1.2、impala-shell的内部命令行参数语法")]),a._v(" "),e("p",[a._v("进入impala-shell命令行之后可以执行的语法")]),a._v(" "),e("h5",{attrs:{id:"help命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#help命令"}},[a._v("#")]),a._v(" help命令")]),a._v(" "),e("p",[a._v("帮助文档")]),a._v(" "),e("h5",{attrs:{id:"connect命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#connect命令"}},[a._v("#")]),a._v(" connect命令")]),a._v(" "),e("p",[a._v("connect  hostname 连接到某一台机器上面去执行")]),a._v(" "),e("h5",{attrs:{id:"refresh-命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#refresh-命令"}},[a._v("#")]),a._v(" refresh 命令")]),a._v(" "),e("p",[a._v("refresh dbname.tablename  增量刷新，刷新某一张表的元数据，主要用于刷新hive当中数据表里面的数据改变的情况")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("refresh course.score;\n")])])]),e("h5",{attrs:{id:"invalidate-metadata-命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#invalidate-metadata-命令"}},[a._v("#")]),a._v(" invalidate  metadata 命令：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("invalidate  metadata\n全量刷新，性能消耗较大，主要用于hive当中新建数据库或者数据库表的时候来进行刷新\n")])])]),e("h5",{attrs:{id:"explain-命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#explain-命令"}},[a._v("#")]),a._v(" explain 命令：")]),a._v(" "),e("p",[a._v("用于查看sql语句的执行计划")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("explain select * from course.score;\n\nexplain的值可以设置成0,1,2,3等几个值，其中3级别是最高的，可以打印出最全的信息\n\nset explain_level=3;\n")])])]),e("h5",{attrs:{id:"profile命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#profile命令"}},[a._v("#")]),a._v(" profile命令：")]),a._v(" "),e("p",[a._v("执行sql语句之后执行，可以打印出更加详细的执行步骤，")]),a._v(" "),e("p",[a._v("主要用于查询结果的查看，集群的调优等")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("select * from course.score;\n\nprofile;\n")])])]),e("p",[a._v("注意:在hive窗口当中插入的数据或者新建的数据库或者数据库表，在impala当中是不可直接查询到的，需要刷新数据库，在impala-shell当中插入的数据，在impala当中是可以直接查询到的，不需要刷新数据库，其中使用的就是catalog这个服务的功能实现的，catalog是impala1.2版本之后增加的模块功能，主要作用就是同步impala之间的元数据")]),a._v(" "),e("h3",{attrs:{id:"_2、创建数据库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、创建数据库"}},[a._v("#")]),a._v(" 2、创建数据库")]),a._v(" "),e("p",[a._v("impala-shell进入到impala的交互窗口")]),a._v(" "),e("h4",{attrs:{id:"_2-1、查看所有数据库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1、查看所有数据库"}},[a._v("#")]),a._v(" 2.1、查看所有数据库")]),a._v(" "),e("p",[a._v("show databases;")]),a._v(" "),e("h4",{attrs:{id:"_2-2、创建与删除数据库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-2、创建与删除数据库"}},[a._v("#")]),a._v(" 2.2、创建与删除数据库")]),a._v(" "),e("p",[a._v("创建数据库")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("CREATE DATABASE IF NOT EXISTS mydb1;\ndrop database  if exists  mydb;\n")])])]),e("p",[a._v("创建数据库表并指定数据库表数据存放hdfs的位置（与hive建表语法类似）")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("hdfs dfs -mkdir -p /input/impala\n\ncreate  external table  t3(id int ,name string ,age int )  row  format  delimited fields terminated  by  '\\t' location  '/input/impala/external';\n")])])]),e("h3",{attrs:{id:"_3、-创建数据库表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、-创建数据库表"}},[a._v("#")]),a._v(" 3、 创建数据库表")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("创建student表\n\nCREATE TABLE IF NOT EXISTS mydb1.student (name STRING, age INT, contact INT );\n\n创建employ表\n\ncreate table employee (Id INT, name STRING, age INT,address STRING, salary BIGINT);\n")])])]),e("h4",{attrs:{id:"_3-1、-数据库表中插入数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1、-数据库表中插入数据"}},[a._v("#")]),a._v(" 3.1、 数据库表中插入数据")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("insert into employee (ID,NAME,AGE,ADDRESS,SALARY)VALUES (1, 'Ramesh', 32, 'Ahmedabad', 20000 );\ninsert into employee values (2, 'Khilan', 25, 'Delhi', 15000 );\nInsert into employee values (3, 'kaushik', 23, 'Kota', 30000 );\nInsert into employee values (4, 'Chaitali', 25, 'Mumbai', 35000 );\nInsert into employee values (5, 'Hardik', 27, 'Bhopal', 40000 );\nInsert into employee values (6, 'Komal', 22, 'MP', 32000 );\n")])])]),e("p",[a._v("数据的覆盖")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("Insert overwrite employee values (1, 'Ram', 26, 'Vishakhapatnam', 37000 );\n执行覆盖之后，表中只剩下了这一条数据了\n\n另外一种建表语句\n\ncreate table customer as select * from employee;\n\n")])])]),e("h4",{attrs:{id:"_3-2、-数据的查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-2、-数据的查询"}},[a._v("#")]),a._v(" 3.2、 数据的查询")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("select * from employee;\n\nselect name,age from employee;\n")])])]),e("h4",{attrs:{id:"_3-3、-删除表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-3、-删除表"}},[a._v("#")]),a._v(" 3.3、 删除表")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("DROP table  mydb1.employee;\n")])])]),e("h4",{attrs:{id:"_3-4、-清空表数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-4、-清空表数据"}},[a._v("#")]),a._v(" 3.4、 清空表数据")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("truncate  employee;\n")])])]),e("h4",{attrs:{id:"_3-5、-查看视图数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-5、-查看视图数据"}},[a._v("#")]),a._v(" 3.5、 查看视图数据")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("select * from employee_view;\n")])])]),e("h3",{attrs:{id:"_4、-order-by语句"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4、-order-by语句"}},[a._v("#")]),a._v(" 4、 order  by语句")]),a._v(" "),e("p",[a._v("基础语法")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("select * from table_name ORDER BY col_name [ASC|DESC] [NULLS FIRST|NULLS LAST]\nSelect * from employee ORDER BY id asc;\n")])])]),e("h3",{attrs:{id:"_5、group-by-语句"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5、group-by-语句"}},[a._v("#")]),a._v(" 5、group  by  语句")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("Select name, sum(salary) from employee Group BY name;\n")])])]),e("h3",{attrs:{id:"_6、-having-语句"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6、-having-语句"}},[a._v("#")]),a._v(" 6、 having 语句")]),a._v(" "),e("p",[a._v("基础语法")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("select * from table_name ORDER BY col_name [ASC|DESC] [NULLS FIRST|NULLS LAST]\n\n按年龄对表进行分组，并选择每个组的最大工资，并显示大于20000的工资\n\nselect max(salary) from employee group by age having max(salary) > 20000;\n\n")])])]),e("h3",{attrs:{id:"_7、-limit语句"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7、-limit语句"}},[a._v("#")]),a._v(" 7、 limit语句")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("select * from employee order by id limit 4;\n")])])]),e("h2",{attrs:{id:"_8、impala当中的数据表导入几种方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8、impala当中的数据表导入几种方式"}},[a._v("#")]),a._v(" 8、impala当中的数据表导入几种方式")]),a._v(" "),e("p",[a._v("第一种方式，通过load  hdfs的数据到impala当中去")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('create table user(id int ,name string,age int ) row format delimited fields terminated by "\\t";\n\n准备数据user.txt并上传到hdfs的 /user/impala路径下去\n\n1\thello\t15\n2\tzhangsan\t20\n3\tlisi\t30\n4\twangwu\t50\n')])])]),e("p",[a._v("加载数据")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("load data inpath '/user/impala/' into table user;\n")])])]),e("p",[a._v("查询加载的数据")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("select  *  from  user;\n\n如果查询不不到数据，那么需要刷新一遍数据表\n\nrefresh  user;\n")])])]),e("p",[a._v("第二种方式：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("create  table  user2   as   select * from  user;\n")])])]),e("p",[a._v("第三种方式：")]),a._v(" "),e("p",[a._v("insert  into  不推荐使用 因为会产生大量的小文件")]),a._v(" "),e("p",[a._v("千万不要把impala当做一个数据库来使用")]),a._v(" "),e("p",[a._v("第四种：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("insert  into  select  用的比较多\n")])])]),e("h2",{attrs:{id:"_9、impala的java开发"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_9、impala的java开发"}},[a._v("#")]),a._v(" 9、impala的java开发")]),a._v(" "),e("p",[a._v("在实际工作当中，因为impala的查询比较快，所以可能有会使用到impala来做数据库查询的情况，我们可以通过java代码来进行操作impala的查询")]),a._v(" "),e("h3",{attrs:{id:"第一步-导入jar包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第一步-导入jar包"}},[a._v("#")]),a._v(" 第一步：导入jar包")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("  <repositories>\n        <repository>\n            <id>cloudera</id>\n            <url>https://repository.cloudera.com/artifactory/cloudera-repos/</url>\n        </repository>\n        <repository>\n            <id>central</id>\n            <url>http://repo1.maven.org/maven2/</url>\n            <releases>\n                <enabled>true</enabled>\n            </releases>\n            <snapshots>\n                <enabled>false</enabled>\n            </snapshots>\n        </repository>\n    </repositories>\n    <dependencies>\n        <dependency>\n            <groupId>org.apache.hadoop</groupId>\n            <artifactId>hadoop-common</artifactId>\n            <version>2.6.0-cdh5.14.2</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.hive</groupId>\n            <artifactId>hive-common</artifactId>\n            <version>1.1.0-cdh5.14.2</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.hive</groupId>\n            <artifactId>hive-metastore</artifactId>\n            <version>1.1.0-cdh5.14.2</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.hive</groupId>\n            <artifactId>hive-service</artifactId>\n            <version>1.1.0-cdh5.14.2</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.hive</groupId>\n            <artifactId>hive-jdbc</artifactId>\n            <version>1.1.0-cdh5.14.2</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.hive</groupId>\n            <artifactId>hive-exec</artifactId>\n            <version>1.1.0-cdh5.14.2</version>\n        </dependency>\n        \x3c!-- https://mvnrepository.com/artifact/org.apache.thrift/libfb303 --\x3e\n        <dependency>\n            <groupId>org.apache.thrift</groupId>\n            <artifactId>libfb303</artifactId>\n            <version>0.9.0</version>\n            <type>pom</type>\n        </dependency>\n        \x3c!-- https://mvnrepository.com/artifact/org.apache.thrift/libthrift --\x3e\n        <dependency>\n            <groupId>org.apache.thrift</groupId>\n            <artifactId>libthrift</artifactId>\n            <version>0.9.0</version>\n            <type>pom</type>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.httpcomponents</groupId>\n            <artifactId>httpclient</artifactId>\n            <version>4.2.5</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.httpcomponents</groupId>\n            <artifactId>httpcore</artifactId>\n            <version>4.2.5</version>\n        </dependency>\n    </dependencies>\n\n")])])]),e("h3",{attrs:{id:"第二步-impala的java代码查询开发"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第二步-impala的java代码查询开发"}},[a._v("#")]),a._v(" 第二步：impala的java代码查询开发")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('public class ImpalaJdbc {\n     public static void main(String[] args) throws Exception {\n     //定义连接驱动类，以及连接url和执行的sql**语句     \n\t String driver = "org.apache.hive.jdbc.HiveDriver";\n     String driverUrl = "jdbc:hive2://192.168.52.120:21050/mydb1;auth=noSasl";\n     String sql = "select * from student";\n \n     //通过反射加载数据库连接驱动*    \n\t Class.forName(driver);\n     Connection connection = DriverManager.getConnection(driverUrl);\n     PreparedStatement preparedStatement = connection.prepareStatement(sql);\n     ResultSet resultSet = preparedStatement.executeQuery();\n     //通过查询，得到数据一共有多少列     \n\t int col = resultSet.getMetaData().getColumnCount();\n     //遍历结果集     \n\t while (resultSet.next()){\n         for(int i=1;i<=col;i++){\n             System.out.print(resultSet.getString(i)+"\\t");\n         }\n         System.out.print("\\n");\n     }\n     preparedStatement.close();\n     connection.close();\n }\n }\n')])])])])}),[],!1,null,null,null);t.default=n.exports},551:function(a,t,s){a.exports=s.p+"assets/img/离线任务处理流程.dd560017.png"},552:function(a,t,s){a.exports=s.p+"assets/img/clip_image002.4e45677b.png"},553:function(a,t,s){a.exports=s.p+"assets/img/clip_image004.a3ba01e7.jpg"},554:function(a,t,s){a.exports=s.p+"assets/img/image-20200331002442077.0ecb9350.png"}}]);